#
# alias
#

# Include local aliases.
source ~/.alias.local;

# Directory listing.
# If the OS is not OS X, do this too.
if [[ `uname` != "Darwin" ]]; then
    alias ls="ls --color=auto"
fi
alias ll="ls -l"
alias lsh="ls -a"
alias llh="ls -al"

# Make grep colorful.
alias grep="grep --color=auto"

# grep history so we can easily find a recent command.
grepHistory() {
  history | grep "$1"
}
alias gh=grepHistory

# extract any compressed files
extract () {
   if [ -f $1 ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf $1    ;;
           *.tar.gz)    tar xvzf $1    ;;
           *.bz2)       bunzip2 $1     ;;
           *.rar)       unrar x $1       ;;
           *.gz)        gunzip $1      ;;
           *.tar)       tar xvf $1     ;;
           *.tbz2)      tar xvjf $1    ;;
           *.tgz)       tar xvzf $1    ;;
           *.zip)       unzip $1       ;;
           *.Z)         uncompress $1  ;;
           *.7z)        7z x $1        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
 }

# git line count by author.
# Taken from:
# http://stackoverflow.com/questions/1265040/how-to-count-total-lines-changed-by-a-specific-author-in-a-git-repository
gitLineCountByAuthor() {
  git log --author="$1" --pretty=tformat: --numstat | gawk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf "added lines: %s removed lines: %s total lines: %s\n", add, subs, loc }' -
}
alias gitlc=gitLineCountByAuthor

# More convenient xdg-open alias.
alias open=xdg-open

# Convert Markdown to HTML.
alias md2html="pandoc -s -f markdown -t html"

# Toggle IPv6.
toggleIPv6Setting() {
  if [[ `sudo sysctl -n net.ipv6.conf.all.disable_ipv6` = '0' ]]; then
    echo IPv6 is enabled. Disabling...
    sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
    echo IPv6 is now disabled.
  else
    echo IPv6 is disabled. Enabling...
    sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0
    echo IPv6 is now enabled.
  fi
}
alias toggleipv6=toggleIPv6Setting

# More convenient piping into clipboard
alias cb="xclip -selection clipboard"

# Get directory size
alias dirsize="du -hs"

# Directories
alias vimrc='vim ~/dotfiles/vimrc'
alias bashrc='vim ~/dotfiles/bashrc'
alias dotfiles='cd ~/dotfiles'

#GIT
alias commit=' git commit -m'
alias add=' git add -A'
alias push=' git push'
alias pull=' git pull'
alias status=' git status'

fpush() {
  git add -A && git commit -m "$1" && git push
}

# Update local dotfiles
alias update='~/dotfiles/update'

# Commands
alias q='exit'
alias nb='start bash'
alias qrify='~/dotfiles/func/qrify'
